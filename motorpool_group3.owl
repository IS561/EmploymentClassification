Prefix(:=<http://is561.org/MotorPool#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(tl:=<http://purl.org/NET/c4dm/timeline.owl#>)
Prefix(dbp:=<http://dbpedia.org/resource/>)
Prefix(geo:=<http://www.w3.org/2003/01/geo/wgs84_pos#>)
Prefix(org:=<http://www.w3.org/ns/org#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(xsp:=<http://www.owl-ontologies.com/2005/08/07/xsp.owl#>)
Prefix(foaf:=<http://xmlns.com/foaf/0.1/>)
Prefix(prov:=<http://www.w3.org/ns/prov#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(skos:=<http://www.w3.org/2004/02/skos/core#>)
Prefix(swrl:=<http://www.w3.org/2003/11/swrl#>)
Prefix(wped:=<http://en.wikipedia.org/wiki/>)
Prefix(dolce:=<http://ontology.ip.rm.cnr.it/ontologies/DOLCE-Lite#>)
Prefix(event:=<http://purl.org/NET/c4dm/event.owl#>)
Prefix(swrlb:=<http://www.w3.org/2003/11/swrlb#>)
Prefix(dcterms:=<http://purl.org/dc/terms/>)
Prefix(protege:=<http://protege.stanford.edu/plugins/owl/protege#>)


Ontology(<http://is561.org/MotorPool>

Declaration(Class(:ACCIDENT))
Declaration(Class(:BUSINESS_ACTIVITY))
Declaration(Class(:DRIVER))
Declaration(Class(:EMPLOYEE))
Declaration(Class(:INSURANCE_POLICY))
Declaration(Class(:INSURED_ACTIVITY))
Declaration(Class(:MVR_RELEASE_FORM))
Declaration(Class(:SUPERVISOR))
Declaration(Class(:VEHICLE))
Declaration(ObjectProperty(:approvedby))
Declaration(ObjectProperty(:approves))
Declaration(ObjectProperty(:designateddriver))
Declaration(ObjectProperty(:documentedby))
Declaration(ObjectProperty(:documents))
Declaration(ObjectProperty(:drivenby))
Declaration(ObjectProperty(:driverfor))
Declaration(ObjectProperty(:drives))
Declaration(ObjectProperty(:droveinaccident))
Declaration(ObjectProperty(:filledby))
Declaration(ObjectProperty(:fillout))
Declaration(ObjectProperty(:hastraveler))
Declaration(ObjectProperty(:included))
Declaration(ObjectProperty(:insuredfor))
Declaration(ObjectProperty(:insuredon))
Declaration(ObjectProperty(:involvesdriver))
Declaration(ObjectProperty(:involvesvehicle))
Declaration(ObjectProperty(:occurredduring))
Declaration(ObjectProperty(:reportedby))
Declaration(ObjectProperty(:reports))
Declaration(ObjectProperty(:supervise))
Declaration(ObjectProperty(:supervisedby))
Declaration(ObjectProperty(:travelson))
Declaration(ObjectProperty(:usedinactivity))
Declaration(ObjectProperty(:usesvehicle))
Declaration(ObjectProperty(:vehicleinaccident))
Declaration(NamedIndividual(:accident1))
Declaration(NamedIndividual(:accidentreport1))
Declaration(NamedIndividual(:bizactivity1))
Declaration(NamedIndividual(:employeeA))
Declaration(NamedIndividual(:mvrrelease1))
Declaration(NamedIndividual(:supervisorB))
Declaration(NamedIndividual(:vehicle1))
############################
#   Object Properties
############################

# Object Property: :approvedby (:approvedby)

InverseObjectProperties(:approvedby :approves)
ObjectPropertyDomain(:approvedby :BUSINESS_ACTIVITY)
ObjectPropertyRange(:approvedby :SUPERVISOR)

# Object Property: :approves (:approves)

ObjectPropertyDomain(:approves :SUPERVISOR)
ObjectPropertyRange(:approves :BUSINESS_ACTIVITY)

# Object Property: :designateddriver (:designateddriver)

InverseObjectProperties(:designateddriver :driverfor)

# Object Property: :documentedby (:documentedby)

InverseObjectProperties(:documentedby :documents)

# Object Property: :drivenby (:drivenby)

InverseObjectProperties(:drivenby :drives)

# Object Property: :droveinaccident (:droveinaccident)

InverseObjectProperties(:droveinaccident :involvesdriver)

# Object Property: :filledby (:filledby)

InverseObjectProperties(:filledby :fillout)

# Object Property: :fillout (:fillout)

ObjectPropertyDomain(:fillout :EMPLOYEE)
ObjectPropertyRange(:fillout :MVR_RELEASE_FORM)

# Object Property: :hastraveler (:hastraveler)

InverseObjectProperties(:hastraveler :travelson)

# Object Property: :included (:included)

InverseObjectProperties(:included :occurredduring)

# Object Property: :insuredfor (:insuredfor)

InverseObjectProperties(:insuredfor :insuredon)

# Object Property: :involvesvehicle (:involvesvehicle)

InverseObjectProperties(:involvesvehicle :vehicleinaccident)

# Object Property: :reportedby (:reportedby)

InverseObjectProperties(:reportedby :reports)

# Object Property: :supervise (:supervise)

InverseObjectProperties(:supervise :supervisedby)
ObjectPropertyDomain(:supervise :SUPERVISOR)
ObjectPropertyRange(:supervise :EMPLOYEE)

# Object Property: :travelson (:travelson)

ObjectPropertyDomain(:travelson :EMPLOYEE)
ObjectPropertyRange(:travelson :BUSINESS_ACTIVITY)

# Object Property: :usedinactivity (:usedinactivity)

InverseObjectProperties(:usedinactivity :usesvehicle)



############################
#   Named Individuals
############################

# Individual: :accident1 (:accident1)

ObjectPropertyAssertion(:occurredduring :accident1 :bizactivity1)

# Individual: :accidentreport1 (:accidentreport1)

ObjectPropertyAssertion(:documents :accidentreport1 :accident1)

# Individual: :bizactivity1 (:bizactivity1)

ObjectPropertyAssertion(:approvedby :bizactivity1 :supervisorB)
ObjectPropertyAssertion(:usesvehicle :bizactivity1 :vehicle1)

# Individual: :employeeA (:employeeA)

ObjectPropertyAssertion(:fillout :employeeA :mvrrelease1)
ObjectPropertyAssertion(:supervisedby :employeeA :supervisorB)
ObjectPropertyAssertion(:travelson :employeeA :bizactivity1)


SubObjectPropertyOf(ObjectPropertyChain(:approvedby :supervise) :insuredfor)
SubObjectPropertyOf(ObjectPropertyChain(:hastraveler :fillout) :insuredon)
)